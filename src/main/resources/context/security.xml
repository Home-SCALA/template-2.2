<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
                           http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd">

    <http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="clientAuthenticationManager"
          xmlns="http://www.springframework.org/schema/security">
        <intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY"/>
        <anonymous enabled="false"/>
        <http-basic entry-point-ref="clientAuthenticationEntryPoint"/>

        <custom-filter ref="clientCredentialsTokenEndpointFilter" after="BASIC_AUTH_FILTER"/>
        <access-denied-handler ref="oauthAccessDeniedHandler"/>
    </http>


    <http use-expressions="true" auto-config="true" entry-point-ref="restAuthenticationEntryPoint">
        <http-basic/>

        <intercept-url pattern="/login.html*" access="permitAll"/>
        <intercept-url pattern="/favicon.ico" access="permitAll"/>
        <intercept-url pattern="/styles/**" access="permitAll"/>
        <intercept-url pattern="/scripts/**" access="permitAll"/>
        <intercept-url pattern="/bower_components/**" access="permitAll"/>


        <intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>

        <form-login login-processing-url="/auth/j_spring_security_check"
                    login-page="/login.html"
                    authentication-failure-url="/login.html?login_error=true"
                    authentication-success-handler-ref="authenticationSuccessEntryPoint"/>

        <logout logout-url="/auth/logout"/>

        <remember-me data-source-ref="dataSource" user-service-ref="jdbcUserDetailsManager"/>

        <custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER"/>
        <access-denied-handler ref="oauthAccessDeniedHandler"/>

    </http>

    <beans:bean id="oauthAuthenticationEntryPoint"
                class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"/>

    <beans:bean id="clientAuthenticationEntryPoint"
                class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"/>

    <beans:bean id="oauthAccessDeniedHandler"
                class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>

    <beans:bean id="clientCredentialsTokenEndpointFilter"
                class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <beans:property name="authenticationManager" ref="clientAuthenticationManager"/>
    </beans:bean>

    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased"
          xmlns="http://www.springframework.org/schema/beans">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter"/>
                <bean class="org.springframework.security.access.vote.RoleVoter"/>
                <bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
                <bean class="org.springframework.security.web.access.expression.WebExpressionVoter"/>
            </list>
        </constructor-arg>
    </bean>

    <authentication-manager id="clientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
        <authentication-provider user-service-ref="clientDetailsUserService"/>
    </authentication-manager>

    <beans:bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>

    <authentication-manager alias="authenticationManager" xmlns="http://www.springframework.org/schema/security">
        <authentication-provider>
            <password-encoder ref="encoder"/>
            <jdbc-user-service id="jdbcUserDetailsManager" data-source-ref="dataSource"
                               users-by-username-query="SELECT username, password, enabled FROM public.users WHERE username = ?"
                               authorities-by-username-query="SELECT u.username, a.name FROM public.user_authorities ua INNER JOIN public.users u ON u.user_id = ua.user_id INNER JOIN public.authority a ON a.authority_id=ua.authority_id WHERE u.username = ?"

                    />
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="clientDetailsUserService"
                class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <beans:constructor-arg ref="clientDetailsService"/>
    </beans:bean>

    <beans:bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.JdbcTokenStore">
        <beans:constructor-arg ref="dataSource"/>
    </beans:bean>

    <beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <beans:property name="tokenStore" ref="tokenStore"/>
        <beans:property name="supportRefreshToken" value="true"/>
        <beans:property name="clientDetailsService" ref="clientDetailsService"/>
    </beans:bean>

    <beans:bean id="userApprovalHandler"
                class="org.springframework.security.oauth2.provider.approval.TokenServicesUserApprovalHandler">
        <beans:property name="tokenServices" ref="tokenServices"/>
    </beans:bean>

    <oauth:authorization-server client-details-service-ref="clientDetailsService" token-services-ref="tokenServices"
                                user-approval-handler-ref="userApprovalHandler">
        <oauth:authorization-code disabled="true"/>
        <oauth:implicit/>
        <oauth:refresh-token/>
        <oauth:client-credentials disabled="true"/>
        <oauth:password/>
    </oauth:authorization-server>

    <oauth:resource-server id="resourceServerFilter" resource-id="habr" token-services-ref="tokenServices"/>

    <beans:bean id="clientDetailsService" class="org.springframework.security.oauth2.provider.JdbcClientDetailsService">
        <beans:constructor-arg ref="dataSource"/>
    </beans:bean>

    <oauth:expression-handler id="oauthExpressionHandler"/>

    <oauth:web-expression-handler id="oauthWebExpressionHandler"/>
</beans:beans>
